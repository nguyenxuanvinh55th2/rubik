{
  "_args": [
    [
      {
        "raw": "graphql@0.9.2",
        "scope": null,
        "escapedName": "graphql",
        "name": "graphql",
        "rawSpec": "0.9.2",
        "spec": "0.9.2",
        "type": "version"
      },
      "/home/azum/jav/rubik/node_modules/gql-merge"
    ]
  ],
  "_from": "graphql@0.9.2",
  "_id": "graphql@0.9.2",
  "_inCache": true,
  "_location": "/gql-merge/graphql",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/graphql-0.9.2.tgz_1490980577024_0.647849062923342"
  },
  "_npmUser": {
    "name": "leebyron",
    "email": "lee@leebyron.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "graphql@0.9.2",
    "scope": null,
    "escapedName": "graphql",
    "name": "graphql",
    "rawSpec": "0.9.2",
    "spec": "0.9.2",
    "type": "version"
  },
  "_requiredBy": [
    "/gql-merge"
  ],
  "_resolved": "https://registry.npmjs.org/graphql/-/graphql-0.9.2.tgz",
  "_shasum": "2cb5c635de13f790a77c5879649cb401b1589386",
  "_shrinkwrap": null,
  "_spec": "graphql@0.9.2",
  "_where": "/home/azum/jav/rubik/node_modules/gql-merge",
  "bugs": {
    "url": "https://github.com/graphql/graphql-js/issues"
  },
  "contributors": [
    {
      "name": "Lee Byron",
      "email": "lee@leebyron.com",
      "url": "http://leebyron.com/"
    },
    {
      "name": "Nicholas Schrock",
      "email": "schrockn@fb.com"
    },
    {
      "name": "Daniel Schafer",
      "email": "dschafer@fb.com"
    }
  ],
  "dependencies": {
    "iterall": "1.0.3"
  },
  "description": "A Query Language and Runtime which can target any service.",
  "devDependencies": {
    "babel-cli": "6.22.2",
    "babel-eslint": "7.2.1",
    "babel-plugin-check-es2015-constants": "6.22.0",
    "babel-plugin-syntax-async-functions": "6.13.0",
    "babel-plugin-transform-class-properties": "6.22.0",
    "babel-plugin-transform-es2015-arrow-functions": "6.22.0",
    "babel-plugin-transform-es2015-block-scoped-functions": "6.22.0",
    "babel-plugin-transform-es2015-block-scoping": "6.22.0",
    "babel-plugin-transform-es2015-classes": "6.22.0",
    "babel-plugin-transform-es2015-computed-properties": "6.22.0",
    "babel-plugin-transform-es2015-destructuring": "6.23.0",
    "babel-plugin-transform-es2015-duplicate-keys": "6.22.0",
    "babel-plugin-transform-es2015-function-name": "6.22.0",
    "babel-plugin-transform-es2015-literals": "6.22.0",
    "babel-plugin-transform-es2015-modules-commonjs": "6.24.0",
    "babel-plugin-transform-es2015-object-super": "6.22.0",
    "babel-plugin-transform-es2015-parameters": "6.22.0",
    "babel-plugin-transform-es2015-shorthand-properties": "6.22.0",
    "babel-plugin-transform-es2015-spread": "6.22.0",
    "babel-plugin-transform-es2015-template-literals": "6.22.0",
    "babel-plugin-transform-es3-property-literals": "^6.22.0",
    "babel-plugin-transform-flow-strip-types": "6.22.0",
    "babel-plugin-transform-object-rest-spread": "6.23.0",
    "babel-plugin-transform-regenerator": "6.22.0",
    "chai": "3.5.0",
    "chai-json-equal": "0.0.1",
    "chai-subset": "1.5.0",
    "coveralls": "2.13.0",
    "eslint": "3.18.0",
    "eslint-plugin-babel": "4.1.1",
    "eslint-plugin-flowtype": "2.30.4",
    "flow-bin": "0.42.0",
    "isparta": "4.0.0",
    "mocha": "3.2.0",
    "sane": "1.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "2cb5c635de13f790a77c5879649cb401b1589386",
    "tarball": "https://registry.npmjs.org/graphql/-/graphql-0.9.2.tgz"
  },
  "gitHead": "5ba817e13f7547ce99c4963ee74a805ed3f74dd8",
  "homepage": "https://github.com/graphql/graphql-js",
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dschafer",
      "email": "dschafer@fb.com"
    },
    {
      "name": "fb",
      "email": "opensource+npm@fb.com"
    },
    {
      "name": "leebyron",
      "email": "lee@leebyron.com"
    },
    {
      "name": "wincent",
      "email": "greg@hurrell.net"
    }
  ],
  "name": "graphql",
  "optionalDependencies": {},
  "options": {
    "mocha": "--require ./resources/mocha-bootload --check-leaks --full-trace src/**/__tests__/**/*-test.js"
  },
  "readme": "# GraphQL.js\n\nThe JavaScript reference implementation for GraphQL, a query language for APIs created by Facebook.\n\n[![npm version](https://badge.fury.io/js/graphql.svg)](http://badge.fury.io/js/graphql)\n[![Build Status](https://travis-ci.org/graphql/graphql-js.svg?branch=master)](https://travis-ci.org/graphql/graphql-js?branch=master)\n[![Coverage Status](https://coveralls.io/repos/graphql/graphql-js/badge.svg?branch=master)](https://coveralls.io/r/graphql/graphql-js?branch=master)\n\nSee more complete documentation at http://graphql.org/ and\nhttp://graphql.org/graphql-js/.\n\nLooking for help? Find resources [from the community](http://graphql.org/community/).\n\n\n## Getting Started\n\nAn overview of GraphQL in general is available in the\n[README](https://github.com/facebook/graphql/blob/master/README.md) for the\n[Specification for GraphQL](https://github.com/facebook/graphql). That overview\ndescribes a simple set of GraphQL examples that exist as [tests](src/__tests__)\nin this repository. A good way to get started with this repository is to walk\nthrough that README and the corresponding tests in parallel.\n\n### Using GraphQL.js\n\nInstall GraphQL.js from npm\n\n```sh\nnpm install --save graphql\n```\n\nGraphQL.js provides two important capabilities: building a type schema, and\nserving queries against that type schema.\n\nFirst, build a GraphQL type schema which maps to your code base.\n\n```js\nimport {\n  graphql,\n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLString\n} from 'graphql';\n\nvar schema = new GraphQLSchema({\n  query: new GraphQLObjectType({\n    name: 'RootQueryType',\n    fields: {\n      hello: {\n        type: GraphQLString,\n        resolve() {\n          return 'world';\n        }\n      }\n    }\n  })\n});\n```\n\nThis defines a simple schema with one type and one field, that resolves\nto a fixed value. The `resolve` function can return a value, a promise,\nor an array of promises. A more complex example is included in the top\nlevel [tests](src/__tests__) directory.\n\nThen, serve the result of a query against that type schema.\n\n```js\nvar query = '{ hello }';\n\ngraphql(schema, query).then(result => {\n\n  // Prints\n  // {\n  //   data: { hello: \"world\" }\n  // }\n  console.log(result);\n\n});\n```\n\nThis runs a query fetching the one field defined. The `graphql` function will\nfirst ensure the query is syntactically and semantically valid before executing\nit, reporting errors otherwise.\n\n```js\nvar query = '{ boyhowdy }';\n\ngraphql(schema, query).then(result => {\n\n  // Prints\n  // {\n  //   errors: [\n  //     { message: 'Cannot query field boyhowdy on RootQueryType',\n  //       locations: [ { line: 1, column: 3 } ] }\n  //   ]\n  // }\n  console.log(result);\n\n});\n```\n\n### Want to ride the bleeding edge?\n\nThe `npm` branch in this repository is automatically maintained to be the last\ncommit to `master` to pass all tests, in the same form found on npm. It is\nrecommend to use builds deployed npm for many reasons, but if you want to use\nthe latest not-yet-released version of graphql-js, you can do so by depending\ndirectly on this branch:\n\n```\nnpm install graphql@git://github.com/graphql/graphql-js.git#npm\n```\n\n### Contributing\n\nWe actively welcome pull requests, learn how to\n[contribute](https://github.com/graphql/graphql-js/blob/master/CONTRIBUTING.md).\n\n### Changelog\n\nChanges are tracked as [Github releases](https://github.com/graphql/graphql-js/releases).\n\n### License\n\nGraphQL is [BSD-licensed](https://github.com/graphql/graphql-js/blob/master/LICENSE).\nWe also provide an additional [patent grant](https://github.com/graphql/graphql-js/blob/master/PATENTS).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/graphql/graphql-js.git"
  },
  "scripts": {
    "build": "babel src --optional runtime --ignore __tests__ --out-dir dist/ && cp package.json dist/ && npm run build-dot-flow",
    "build-dot-flow": "find ./src -name '*.js' -not -path '*/__tests__*' | while read filepath; do cp $filepath `echo $filepath | sed 's/\\/src\\//\\/dist\\//g'`.flow; done",
    "check": "flow check",
    "check-cover": "for file in {src/*.js,src/**/*.js}; do echo $file; flow coverage $file; done",
    "cover": "babel-node ./node_modules/.bin/isparta cover --root src --report html _mocha -- $npm_package_options_mocha",
    "cover:lcov": "babel-node ./node_modules/.bin/isparta cover --root src --report lcovonly _mocha -- $npm_package_options_mocha",
    "lint": "eslint src || (printf '\\033[33mTry: \\033[7m npm run lint -- --fix \\033[0m\\n' && exit 1)",
    "prepublish": ". ./resources/prepublish.sh",
    "preversion": ". ./resources/checkgit.sh && npm test",
    "t": "babel-node ./node_modules/.bin/_mocha --require ./resources/mocha-bootload",
    "test": "npm run lint && npm run check && npm run testonly",
    "testonly": "babel-node ./node_modules/.bin/_mocha $npm_package_options_mocha",
    "watch": "babel-node ./resources/watch.js"
  },
  "version": "0.9.2"
}
